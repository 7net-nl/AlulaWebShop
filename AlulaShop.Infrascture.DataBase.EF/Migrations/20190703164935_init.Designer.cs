// <auto-generated />
using System;
using AlulaShop.Infrascture.DataBase.EF.Common;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AlulaShop.Infrascture.DataBase.EF.Migrations
{
    [DbContext(typeof(EFDbContext))]
    [Migration("20190703164935_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AlulaShop.Domain.Entities.Brand", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.ToTable("Brands");
                });

            modelBuilder.Entity("AlulaShop.Domain.Entities.Category", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<long>("ProductID");

                    b.HasKey("ID");

                    b.HasIndex("ProductID");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("AlulaShop.Domain.Entities.CategoryChild", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CategoryID");

                    b.Property<long?>("CategoryID1");

                    b.Property<long?>("ProductID");

                    b.HasKey("ID");

                    b.HasIndex("CategoryID");

                    b.HasIndex("CategoryID1");

                    b.HasIndex("ProductID");

                    b.ToTable("CategoryChilds");
                });

            modelBuilder.Entity("AlulaShop.Domain.Entities.FileImage", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(1000);

                    b.Property<long>("ProductID");

                    b.Property<long?>("ProductID1");

                    b.HasKey("ID");

                    b.HasIndex("ProductID");

                    b.HasIndex("ProductID1");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("AlulaShop.Domain.Entities.Product", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Available");

                    b.Property<long>("BrandID");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(4000);

                    b.Property<decimal>("NewPrice");

                    b.Property<decimal>("OldPrice");

                    b.Property<byte>("Ranks")
                        .HasMaxLength(1);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<decimal>("WithoutTax");

                    b.HasKey("ID");

                    b.HasIndex("BrandID");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("AlulaShop.Domain.Entities.Review", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(1000);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(300);

                    b.Property<long>("ProductID");

                    b.Property<long?>("ProductID1");

                    b.Property<byte>("Rank")
                        .HasMaxLength(1);

                    b.HasKey("ID");

                    b.HasIndex("ProductID");

                    b.HasIndex("ProductID1");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("AlulaShop.Domain.Entities.Category", b =>
                {
                    b.HasOne("AlulaShop.Domain.Entities.Product")
                        .WithMany("Categories")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AlulaShop.Domain.Entities.CategoryChild", b =>
                {
                    b.HasOne("AlulaShop.Domain.Entities.Category")
                        .WithMany("Categories")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AlulaShop.Domain.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryID1");

                    b.HasOne("AlulaShop.Domain.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductID");
                });

            modelBuilder.Entity("AlulaShop.Domain.Entities.FileImage", b =>
                {
                    b.HasOne("AlulaShop.Domain.Entities.Product")
                        .WithMany("Images")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AlulaShop.Domain.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductID1");
                });

            modelBuilder.Entity("AlulaShop.Domain.Entities.Product", b =>
                {
                    b.HasOne("AlulaShop.Domain.Entities.Brand", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AlulaShop.Domain.Entities.Review", b =>
                {
                    b.HasOne("AlulaShop.Domain.Entities.Product")
                        .WithMany("Reviews")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AlulaShop.Domain.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductID1");
                });
#pragma warning restore 612, 618
        }
    }
}
